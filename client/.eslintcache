[{"/Users/jordanclemons/Documents/preferify/client/src/index.js":"1","/Users/jordanclemons/Documents/preferify/client/src/reportWebVitals.js":"2","/Users/jordanclemons/Documents/preferify/client/src/App.js":"3","/Users/jordanclemons/Documents/preferify/client/src/components/container.js":"4","/Users/jordanclemons/Documents/preferify/client/src/components/welcomepage/welcomepage.js":"5","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/musicpage.js":"6","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/playlistbubble.js":"7","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/song.js":"8","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/songdetail.js":"9"},{"size":500,"mtime":1611797115790,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1611797115790,"results":"12","hashOfConfig":"11"},{"size":224,"mtime":1611797115772,"results":"13","hashOfConfig":"11"},{"size":514,"mtime":1611877060317,"results":"14","hashOfConfig":"11"},{"size":3177,"mtime":1612003791806,"results":"15","hashOfConfig":"11"},{"size":8119,"mtime":1611975895045,"results":"16","hashOfConfig":"11"},{"size":3407,"mtime":1612001800433,"results":"17","hashOfConfig":"11"},{"size":623,"mtime":1611813419533,"results":"18","hashOfConfig":"11"},{"size":837,"mtime":1611813460658,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"d5zfsc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/jordanclemons/Documents/preferify/client/src/index.js",[],["42","43"],"/Users/jordanclemons/Documents/preferify/client/src/reportWebVitals.js",[],"/Users/jordanclemons/Documents/preferify/client/src/App.js",[],"/Users/jordanclemons/Documents/preferify/client/src/components/container.js",["44","45","46"],"import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect, useLocation} from \"react-router-dom\";\n\n//Components\nimport WelcomePage from './welcomepage/welcomepage';\nimport MusicPage from './musicpage/musicpage';\n\nfunction Container() {\n  return (\n    <Router>\n        \n          <Switch>\n            <Route path=\"/\" exact component={WelcomePage}/>\n            <Route path =\"/music\" exact component={MusicPage}/>\n          </Switch>\n        </Router>\n  );\n}\n\nexport default Container;","/Users/jordanclemons/Documents/preferify/client/src/components/welcomepage/welcomepage.js",["47","48","49","50","51","52"],"/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/musicpage.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React, { useEffect, useRef, useState } from 'react';\nimport queryString from 'query-string';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect, useLocation} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleNotch, faCompactDisc} from '@fortawesome/free-solid-svg-icons'\nimport Typed from 'react-typed';\nimport Song from './song.js';\nimport SongDetail from './songdetail.js';\nimport PlaylistBubble from './playlistbubble.js';\nimport git from '../images/github-logo.png';\nimport './musicpage.css';\n\n\n\nfunction MusicPage() {\n\n  const [token, setToken] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  const [time, setTime] = useState(\"short_term\");\n  const [limit, setLimit] = useState();\n  const [load, setLoad] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [selectedSong, setSelectedSong] = useState();\n  const [playlistModal, setPlaylistModal] = useState(false);\n  const [playlistname, setPlaylistname] = useState(\"\");\n  const [songURI, setSongURI] = useState([]);\n  const [playlistURL, setPlaylistURL] = useState(\"\");\n  const [finishplaylist, setFinishplaylist] = useState(false);\n  const [playlistImages, setPlaylistImages] = useState([]);\n\n  const [shortTerm, setShortTerm] = useState([]);\n  const [mediumTerm, setMediumTerm] = useState([]);\n  const [longTerm, setLongTerm] = useState([]);\n\n  const node = useRef();\n  const node2 = useRef();\n\n  /* UseEffect renders */\n\n  useEffect(() =>{\n    getToken();\n  }, []);\n\n  useEffect(() =>{\n    if(token !== \"\" && token !== undefined){\n      getSongs();\n    }\n  }, [token]);\n\n  useEffect(() =>{\n    if(shortTerm !== undefined){\n      if(shortTerm.length > 0 && shortTerm !== undefined){\n        setSongs(shortTerm);\n        setLimit(10);\n      }\n    }\n  }, [shortTerm]);\n\n  useEffect(() =>{\n    if(time === \"short_term\"){\n      var newSongs =shortTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n    else if(time === \"medium_term\"){\n      var newSongs = mediumTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n    else if(time === \"long_term\"){\n      var newSongs = longTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n  }, [limit]);\n\n  useEffect(() =>{\n    if(time === \"short_term\"){\n      var newSongs =shortTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n    else if(time === \"medium_term\"){\n      var newSongs =mediumTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n    else if(time === \"long_term\"){\n      var newSongs = longTerm.slice(0, limit);\n      setSongs(newSongs);\n    }\n  }, [time]);\n\n  useEffect(() => {\n      setSongURI(songs.map(song => song.uri))\n      /* Generating playlist image */\n      if(songs.length > 0){\n        var images = [];\n        for(var x = 0; x < 4; x++){\n          images.push(songs[x].album.images[0].url);\n        }\n        setPlaylistImages(images);\n      }\n  }, [songs]);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", closeModal);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", closeModal);\n    };\n  }, []);\n\n  var init = useLocation().token;\n  if(init === undefined && localStorage.getItem(\"token\") === undefined){\n    return(<Redirect to= \"/\"></Redirect>)\n  }\n\n  /* Spotify functions */\n  \n  const getToken = () => {\n    if(init !== undefined){\n      localStorage.setItem('token', init.token);\n      setToken(init.token);\n    }\n    else if(localStorage.getItem(\"token\") !== undefined){\n      setToken(localStorage.getItem(\"token\"));\n    }\n  }\n\n  const getSongs = () =>{\n    setLoad(true);\n    fetch('https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=50',{\n    headers: {'Authorization': 'Bearer ' + token}\n    }).then(response => response.json())\n    .then(data => setShortTerm(data.items))\n    fetch('https://api.spotify.com/v1/me/top/tracks?time_range=medium_term&limit=50',{\n    headers: {'Authorization': 'Bearer ' + token}\n    }).then(response => response.json())\n    .then(data => setMediumTerm(data.items))\n    fetch('https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=50',{\n    headers: {'Authorization': 'Bearer ' + token}\n    }).then(response => response.json())\n    .then(data => setLongTerm(data.items))\n    setTimeout(() => setLoad(false), 500);\n}\n\nconst savePlaylist = (playlistName) =>{\n  fetch('https://api.spotify.com/v1/me',{\n    headers: {'Authorization': 'Bearer ' + token}\n  }).then(response => response.json())\n  .then((data) => {\n    var userID = data.id;\n    fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n      method: 'POST',\n      headers: {'Authorization': 'Bearer ' + token},\n      body: JSON.stringify({name: playlistName})\n    }).then(response => response.json())\n    .then((data) => {\n      setPlaylistURL(data.external_urls.spotify);\n      var playlistID = data.id;\n      fetch(`https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`, {\n        method: 'POST', \n        headers: {'Authorization': 'Bearer ' + token},\n        body: JSON.stringify({uris: songURI})\n      }).then((setFinishplaylist(true)))\n    })\n  })\n}\n\n/* Little Functions */\n\nconst handleLimit = e =>{\n  setLimit(e.target.value);\n}\n\nconst handleTerm = e =>{\n  setTime(e.target.value);\n}\n\nconst modalOn = (song) => {\n  setModal(!modal);\n  setSelectedSong(song);\n}\n\nconst playlistModalOn = () =>{\n  setPlaylistModal(!playlistModal);\n}\n\nconst closeModal = e => {\n  if(node.current !== undefined && node2.current !== undefined){\n    if (node.current.contains(e.target) || node2.current.contains(e.target)){\n      // inside click\n      return;\n    }\n  }\n  // outside click\n  setModal(false);\n  setSelectedSong();\n  setPlaylistModal(false);\n  setPlaylistname(\"\");\n  setPlaylistURL(\"\");\n  setFinishplaylist(false);\n};\n\n\n\n  /* Returns */\n\n  if(token === undefined){\n    return (<Redirect to=\"/\" />);\n  }\n\n  if(shortTerm === undefined){\n    return (<Redirect to=\"/\" />);\n  }\n\n  return (\n    <div>\n      <div className=\"music-container\">\n        <div className =\"music-input-container\">\n          <h1 className=\"music-top-header\">Your top songs</h1>\n          <div className=\"select-container\">\n            <select className=\"dropdown\" onChange={handleLimit}>\n              <option value=\"10\">10 songs</option>\n              <option value=\"25\">25 songs</option>\n              <option value=\"50\">50 songs</option>\n            </select>\n            <select className=\"dropdown\" onChange={handleTerm}>\n              <option value=\"short_term\">1 month</option>\n              <option value=\"medium_term\">6 months</option>\n              <option value=\"long_term\">all time</option>\n            </select>\n          </div>\n          \n        </div>\n        <div className=\"songs-container\">\n          {songs.map((song) =>\n            <Song song={song} onClick={modalOn}></Song>\n          )}\n        </div>\n        <div className=\"git-info\">\n                <a className=\"git-creator\" href={\"mailto:devbyjordan@gmail.com\"}>Created by Jordan Clemons</a>\n        </div>\n        <div className='music-header'>\n            <Typed\n                    strings={['Preferify']}\n                    typeSpeed={40}\n                    />\n          </div>\n      </div>\n      <div className=\"playlist-button\"><div className=\"button-flex\" onClick={() => playlistModalOn()}><FontAwesomeIcon icon={faCompactDisc} size=\"3x\" className=\"playlist-icon\"/> <div className=\"playlist-button-text\">Playlist</div></div></div>\n      <div className={`modal-background modalvisible-${modal}`}>\n        <div ref={node}><SongDetail song={selectedSong} ></SongDetail></div>\n      </div>\n      <div className={`visible-${load}`}><div className=\"spinner\"><FontAwesomeIcon icon={faCircleNotch} class=\"fa-spin\"/>Loading</div></div>\n      <div className={`modal-background modalvisible-${playlistModal}`}>\n        <div ref={node2}><PlaylistBubble limit={limit} time={time} savePlaylist={savePlaylist} playlistname={playlistname} setPlaylistname={setPlaylistname} finishPlaylist={finishplaylist} playlistURL={playlistURL} playlistImages={playlistImages}></PlaylistBubble></div>\n      </div>\n    </div>\n  );\n}\n\nexport default MusicPage;","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/playlistbubble.js",["67","68"],"import React, {useState, useEffect} from 'react';\nimport logo from '../images/spotify-logo.png';\nimport twitterLogo from '../images/twitter-logo.png';\nimport './playlistbubble.css';\n\nfunction PlaylistBubble({limit, time, savePlaylist, playlistname, setPlaylistname, finishPlaylist, playlistURL, playlistImages}) {\n\n    const [timespan, setTimespan] = useState();\n    const [submitPlaylistName, setSubmitPlaylistName] = useState(\"\");\n    const [tweetSpan, setTweetSpan] = useState(\"\");\n    const [tweetIntent, setTweetIntent] = useState(\"\");\n\n    const changePlaylistName = e =>{\n        if(e.target.value.length <= 200){\n            setPlaylistname(e.target.value);\n        }\n    }\n\n    const checkPlaylistName = () =>{\n        console.log(\"j\");\n        if(playlistname === \"\"){\n            setSubmitPlaylistName(\"Preferify top songs \" + timespan);\n        }\n        else{setSubmitPlaylistName(playlistname);}\n    }\n\n\n    useEffect(() =>{\n        if(time === \"short_term\"){\n            setTimespan(\"of the month\");\n            setTweetSpan(\"of+the+month\");\n        }\n        else if(time ===\"medium_term\"){\n            setTimespan(\"of 6 months\");\n            setTweetSpan(\"of+the+last+6+months\");\n        }\n        else if(time === \"long_term\"){\n            setTimespan(\"of all time\");\n            setTweetSpan(\"of+all+time\");\n        }\n      }, [time]);\n\n    useEffect(() =>{\n        if(submitPlaylistName.length > 0){\n            savePlaylist(submitPlaylistName);\n        }\n    }, [submitPlaylistName]);\n\n    useEffect(() => {\n        setTweetIntent(\"https://twitter.com/intent/tweet?hashtags=Preferify&text=Check+out+my+top+songs \" + tweetSpan + \"!&url=\" + playlistURL);\n    }, [playlistURL]);\n\n  return (\n    <div className=\"playlistbubble-container\">\n        <div className={`playlist-flexbox-${finishPlaylist}`}>\n            <p1 className=\"playlist-title\">Playlist Title</p1>\n            <input className=\"playlist-input\" type=\"text\" placeholder={`Preferify top songs ${timespan}`} onChange={e => changePlaylistName(e)} value={playlistname}></input>\n            <button className=\"playlistbubble-button\" onClick={() => checkPlaylistName()}>Make Playlist</button>\n        </div>\n        <div className={`playlistdone-flexbox-${finishPlaylist}`}>\n            <p1 className=\"playlist-created\">Playlist created!</p1>\n            <div className=\"images-flex\">\n            {playlistImages.map((image) =>\n                <img className=\"playlist-image\" src={image} alt=\"playlist thumbnail\"></img>\n            )}\n            </div>\n            <div className=\"option-container\">\n                <form action={playlistURL} target=\"_blank\" rel=\"noreferrer\">\n                    <button className=\"open-container\">\n                        <p1 className=\"playlist-link\">Open in Spotify &nbsp; </p1>\n                        <img src={logo} alt=\"spotify logo\" className=\"spotify-logo\"></img>\n                    </button>\n                </form>\n                <a href={tweetIntent} target=\"_blank\" rel=\"noreferrer\" className=\"twitter-link\">\n                    <button className=\"open-container\">\n                        <p1 className=\"playlist-link\">Share on Twitter &nbsp; </p1>\n                        <img src={twitterLogo} alt=\"spotify logo\" className=\"twitter-logo\"></img>\n                    </button>\n                </a>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default PlaylistBubble;","/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/song.js",[],"/Users/jordanclemons/Documents/preferify/client/src/components/musicpage/songdetail.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":49,"nodeType":"75","messageId":"76","endLine":2,"endColumn":53},{"ruleId":"73","severity":1,"message":"77","line":2,"column":55,"nodeType":"75","messageId":"76","endLine":2,"endColumn":63},{"ruleId":"73","severity":1,"message":"78","line":2,"column":65,"nodeType":"75","messageId":"76","endLine":2,"endColumn":76},{"ruleId":"73","severity":1,"message":"79","line":2,"column":26,"nodeType":"75","messageId":"76","endLine":2,"endColumn":32},{"ruleId":"73","severity":1,"message":"80","line":2,"column":34,"nodeType":"75","messageId":"76","endLine":2,"endColumn":39},{"ruleId":"73","severity":1,"message":"81","line":2,"column":41,"nodeType":"75","messageId":"76","endLine":2,"endColumn":47},{"ruleId":"73","severity":1,"message":"74","line":2,"column":49,"nodeType":"75","messageId":"76","endLine":2,"endColumn":53},{"ruleId":"73","severity":1,"message":"82","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":11},{"ruleId":"73","severity":1,"message":"83","line":26,"column":11,"nodeType":"75","messageId":"76","endLine":26,"endColumn":24},{"ruleId":"73","severity":1,"message":"84","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":19},{"ruleId":"73","severity":1,"message":"79","line":3,"column":26,"nodeType":"75","messageId":"76","endLine":3,"endColumn":32},{"ruleId":"73","severity":1,"message":"80","line":3,"column":34,"nodeType":"75","messageId":"76","endLine":3,"endColumn":39},{"ruleId":"73","severity":1,"message":"81","line":3,"column":41,"nodeType":"75","messageId":"76","endLine":3,"endColumn":47},{"ruleId":"73","severity":1,"message":"74","line":3,"column":49,"nodeType":"75","messageId":"76","endLine":3,"endColumn":53},{"ruleId":"73","severity":1,"message":"82","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":42,"column":6,"nodeType":"87","endLine":42,"endColumn":8,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":48,"column":6,"nodeType":"87","endLine":48,"endColumn":13,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":65,"column":11,"nodeType":"75","messageId":"93","endLine":65,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":69,"column":11,"nodeType":"75","messageId":"93","endLine":69,"endColumn":19},{"ruleId":"85","severity":1,"message":"94","line":72,"column":6,"nodeType":"87","endLine":72,"endColumn":13,"suggestions":"95"},{"ruleId":"91","severity":1,"message":"92","line":80,"column":11,"nodeType":"75","messageId":"93","endLine":80,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":84,"column":11,"nodeType":"75","messageId":"93","endLine":84,"endColumn":19},{"ruleId":"85","severity":1,"message":"96","line":87,"column":6,"nodeType":"87","endLine":87,"endColumn":12,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"98","line":47,"column":8,"nodeType":"87","endLine":47,"endColumn":28,"suggestions":"99"},{"ruleId":"85","severity":1,"message":"100","line":51,"column":8,"nodeType":"87","endLine":51,"endColumn":21,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'git' is defined but never used.","'DEVOPMENTLINK' is assigned a value but never used.","'queryString' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'getSongs'. Either include it or remove the dependency array.",["105"],"no-redeclare","'newSongs' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'longTerm', 'mediumTerm', 'shortTerm', and 'time'. Either include them or remove the dependency array.",["106"],"React Hook useEffect has missing dependencies: 'limit', 'longTerm', 'mediumTerm', and 'shortTerm'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'savePlaylist'. Either include it or remove the dependency array. If 'savePlaylist' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"React Hook useEffect has a missing dependency: 'tweetSpan'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTweetIntent' needs the current value of 'tweetSpan'.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [getToken]",{"range":"121","text":"122"},"Update the dependencies array to be: [getSongs, token]",{"range":"123","text":"124"},"Update the dependencies array to be: [limit, longTerm, mediumTerm, shortTerm, time]",{"range":"125","text":"126"},{"range":"127","text":"126"},"Update the dependencies array to be: [savePlaylist, submitPlaylistName]",{"range":"128","text":"129"},"Update the dependencies array to be: [playlistURL, tweetSpan]",{"range":"130","text":"131"},[1527,1529],"[getToken]",[1626,1633],"[getSongs, token]",[2199,2206],"[limit, longTerm, mediumTerm, shortTerm, time]",[2575,2581],[1483,1503],"[savePlaylist, submitPlaylistName]",[1681,1694],"[playlistURL, tweetSpan]"]